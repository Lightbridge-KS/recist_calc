# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_target.ipynb.

# %% auto 0
__all__ = ['RecistTarget']

# %% ../nbs/01_target.ipynb 3
from dataclasses import dataclass, field

# %% ../nbs/01_target.ipynb 6
@dataclass
class RecistTarget:
    """
    This class represents the RECIST (Response Evaluation Criteria in Solid Tumors) evaluation 
    for target lesions at a specific time point.
    """
    category: str = field(init=False)
    current_mm: float = None
    baseline_mm: float = None
    baseline_pc_change: float = field(init=False, default=None)
    nadir_mm: float = None
    nadir_pc_change: float = field(init=False, default=None)
    is_new_lesion: bool = None
    is_ln_pathological: bool = None
    
    def __post_init__(self):
        # If Nadir is not provided, it equals to baseline 
        if self.nadir_mm is None:
            self.nadir_mm = self.baseline_mm
            
        # Check for "Not Evaluable" (NE) condition
        if self.current_mm is None or self.baseline_mm is None:
            self.category = "NE"
            return
        
        # Calculate % Changes from Nadir and Baseline
        if (self.current_mm is not None) and (self.baseline_mm is not None):
            self.nadir_pc_change = ((self.current_mm - self.nadir_mm) / self.nadir_mm) * 100    
            self.baseline_pc_change = ((self.current_mm - self.baseline_mm) / self.baseline_mm) * 100   
        
        # PD
        if (self.nadir_pc_change >= 20 and self.current_mm - self.nadir_mm >= 5) or (self.is_new_lesion == True):
            self.category = "PD"
        # CR
        elif self.current_mm == 0 and (not self.is_ln_pathological):
            self.category = "CR"
        # PR
        elif self.baseline_pc_change <= -30:
            self.category = "PR"
        # SD
        else:
            self.category = "SD"

