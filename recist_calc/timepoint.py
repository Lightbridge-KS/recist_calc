# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_timepoint.ipynb.

# %% auto 0
__all__ = ['RecistTimePoint']

# %% ../nbs/03_timepoint.ipynb 3
from dataclasses import dataclass, field
from typing import Dict
from .target import RecistTarget
from .nontarget import RecistNonTarget

# %% ../nbs/03_timepoint.ipynb 6
@dataclass
class RecistTimePoint:
    """This class represents the RECIST (Response Evaluation Criteria in Solid Tumors) evaluation 
    for a specific time point, combining the assessments of target and non-target lesions.
    """
    target: RecistTarget = field(default_factory=RecistTarget)
    nontarget: RecistNonTarget = field(default_factory=RecistNonTarget)
    is_new_lesion: bool = field(default= None)
    category: Dict[str, str] = field(default_factory=dict, init=False)
    
    def __post_init__(self):
        # Assign Categories
        self.category = {"final": "", "target": self.target.category, "nontarget": self.nontarget.category}
        # Override New Lesion
        self.is_new_lesion = self.target.is_new_lesion or self.nontarget.is_new_lesion 
        # PD
        if self.target.category == "PD" or self.nontarget.category == "PD" or self.is_new_lesion:
            self.category["final"] = "PD"
        # CR
        elif self.target.category == "CR" and self.nontarget.category == "CR":
            self.category["final"] = "CR"
            
        # PR
        elif self.target.category == "CR" and self.nontarget.category in ["Non-CR/Non-PD", "NE"]:
            self.category["final"] = "PR"
        elif self.target.category == "PR" and self.nontarget.category == "Non-CR/Non-PD":
            self.category["final"] = "PR"
        # SD
        elif self.target.category == "SD" and self.nontarget.category == "Non-CR/Non-PD":
            self.category["final"] = "SD"
        # NE
        elif self.target.category == "NE":
            self.category["final"] = "NE"
        else:
            # self.category["final"] = "-"
            raise NotImplementedError

